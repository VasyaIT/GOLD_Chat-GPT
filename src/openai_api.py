import openai
from openai.error import ServiceUnavailableError, RateLimitError

from config import API_KEY, logger
# from translation import translation

openai.api_key = API_KEY


async def generate_answer(text: str, user_id: int) -> str:
    # prompt, language = translation(text)
    # print(language)

    try:
        completion = await openai.ChatCompletion.acreate(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": text}],
            max_tokens=2000
        )
    except ServiceUnavailableError:
        logger.warning('OpenAI —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω')
        return '–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑'
    except RateLimitError:
        logger.warning(f'{user_id} —Å–¥–µ–ª–∞–ª –±–æ–ª—å—à–µ —Ç—Ä—ë—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É')
        return '–ù–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å –±–æ–ª—å—à–µ 3 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É, Ô∏è—Å–æ—Ä—è–Ω ü§∑‚Äç‚ôÇÔ∏è'

    return completion['choices'][0]['message']['content']
